{"version":3,"file":"static/js/682.a549b151.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/UI/Logo/Logo.module.css?14d9","components/UI/Logo/Logo.jsx","webpack://react-homework-template/./src/components/sidebarComponents/LogOut/LogOut.module.css?48d8","components/sidebarComponents/LogOut/LogOut.jsx","webpack://react-homework-template/./src/components/sidebarComponents/Sidebar/Sidebar.module.css?37a5","webpack://react-homework-template/./src/components/sidebarComponents/ListBoards/ListBoards.module.css?cdbe","webpack://react-homework-template/./src/components/sidebarComponents/BoardListItem/BoardListItem.module.css?c461","webpack://react-homework-template/./src/components/sidebarComponents/EditBoardForm/EditBoardForm.module.css?c84f","components/sidebarComponents/CreateBoardForm/Icons.jsx","components/sidebarComponents/CreateBoardForm/Backgrounds.jsx","components/sidebarComponents/EditBoardForm/EditBoardForm.jsx","components/sidebarComponents/BoardListItem/BoardListItem.jsx","redux/board/selectors.js","components/sidebarComponents/ListBoards/ListBoards.jsx","webpack://react-homework-template/./src/components/sidebarComponents/HelpButton/HelpButton.module.css?6a1a","webpack://react-homework-template/./src/components/sidebarComponents/HelpModal/HelpModal.module.css?20ce","redux/modal/modalSelectors.js","webpack://react-homework-template/./src/components/sidebarComponents/HelpForm/HelpForm.module.css?1c71","components/sidebarComponents/HelpForm/HelpForm.jsx","components/sidebarComponents/HelpModal/HelpModal.jsx","components/sidebarComponents/HelpButton/HelpButton.jsx","webpack://react-homework-template/./src/components/sidebarComponents/HelpMenu/HelpMenu.module.css?c5b6","components/sidebarComponents/HelpMenu/HelpMenu.jsx","webpack://react-homework-template/./src/components/sidebarComponents/CreateButton/CreateButton.module.css?0f17","webpack://react-homework-template/./src/components/sidebarComponents/CreateBoardModal/CreateBoardModal.module.css?8572","webpack://react-homework-template/./src/components/sidebarComponents/CreateBoardForm/CreateBoardForm.module.css?a8b8","components/sidebarComponents/CreateBoardForm/CreateBoardForm.jsx","components/sidebarComponents/CreateBoardModal/CreateBoardModal.jsx","components/sidebarComponents/CreateButton/CreateButton.jsx","webpack://react-homework-template/./src/components/sidebarComponents/NewBoard/NewBoard.module.css?0a37","components/sidebarComponents/NewBoard/NewBoard.jsx","components/sidebarComponents/Sidebar/Sidebar.jsx","webpack://react-homework-template/./src/pages/HomePage.module.css?fc1d","webpack://react-homework-template/./src/components/Header/Header.module.css?4e72","webpack://react-homework-template/./src/components/UI/Modals/BasicModal/BasicModal.module.css?71d6","components/UI/Modals/BasicModal/BasicModal.jsx","components/Header/Select/Select.jsx","components/Header/Header.jsx","pages/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"Logo_logo__92bY6\",\"big\":\"Logo_big__Q7GRn\",\"box\":\"Logo_box__sFJjv\",\"title\":\"Logo_title__wRck4\",\"icon\":\"Logo_icon__gLu-i\"};","import css from './Logo.module.css';\nimport sprite from '../../../img/icons/sprite.svg';\n\nexport default function Logo({ big = '' }) {\n  return (\n    <div className={`${css.logo}${` ${big && css.big}`}`}>\n      <div className={`${css.box}${` ${big && css.big}`}`}>\n        <svg className={`${css.icon}${` ${big && css.big}`}`}>\n          <use href={`${sprite}#icon-logo`} />\n        </svg>\n      </div>\n      <h1 className={`${css.title}${` ${big && css.big}`}`}>Task Pro</h1>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"logout\":\"LogOut_logout__bNGo9\",\"logout_button\":\"LogOut_logout_button__8tLDX\",\"logout_button_icon\":\"LogOut_logout_button_icon__+xvyj\",\"logout_button_text\":\"LogOut_logout_button_text__c97Xa\"};","import { useDispatch } from 'react-redux';\nimport { logoutUser } from \"../../../redux/user/userApi\"\nimport css from \"./LogOut.module.css\"\nimport sprite from '../../../img/icons/sprite.svg';\n\n\nconst LogOut = () => {\n    const dispatch = useDispatch();\n    return (\n        <div className={css.logout}>\n            <button className={css.logout_button} type=\"button\"\n                onClick={() => dispatch(logoutUser())}\n            >\n                <svg className={css.logout_button_icon} width=\"32\" height=\"32\" >\n                    <use href={`${sprite}#icon-login`} />\n                </svg>\n\n            </button>\n            <p className={css.logout_button_text}>Log out</p>\n        </div>\n    )\n}\nexport default LogOut","// extracted by mini-css-extract-plugin\nexport default {\"sidebar\":\"Sidebar_sidebar__Lt4vr\",\"sidebar_backdrop\":\"Sidebar_sidebar_backdrop__ozhZw\",\"active\":\"Sidebar_active__PFhRh\",\"sidebar_container\":\"Sidebar_sidebar_container__PnM+t\",\"sidebar_down\":\"Sidebar_sidebar_down__0iC8z\"};","// extracted by mini-css-extract-plugin\nexport default {\"sidebar_boards_list\":\"ListBoards_sidebar_boards_list__tAA1H\",\"board_list_item\":\"ListBoards_board_list_item__bw8FX\",\"scroll_container\":\"ListBoards_scroll_container__8u1qS\"};","// extracted by mini-css-extract-plugin\nexport default {\"board_list_item\":\"BoardListItem_board_list_item__LlyWi\",\"board_box\":\"BoardListItem_board_box__YtIvO\",\"board_title\":\"BoardListItem_board_title__1EZ7w\",\"board_icon\":\"BoardListItem_board_icon__m0B8F\",\"icon_pencil\":\"BoardListItem_icon_pencil__Hn1At\",\"icon_trash\":\"BoardListItem_icon_trash__wKxRO\",\"board_icons\":\"BoardListItem_board_icons__Sx22x\",\"board_line\":\"BoardListItem_board_line__ulBY7\"};","// extracted by mini-css-extract-plugin\nexport default {\"edit_board_wrap\":\"EditBoardForm_edit_board_wrap__Oc2hM\",\"edit_board_title\":\"EditBoardForm_edit_board_title__4AvG-\",\"edit_board_wrap_input\":\"EditBoardForm_edit_board_wrap_input__DaGxd\",\"edit_board_input\":\"EditBoardForm_edit_board_input__Wgzcg\",\"edit_board_close_btn\":\"EditBoardForm_edit_board_close_btn__c--kZ\",\"error_message\":\"EditBoardForm_error_message__dZ3r0\",\"edit_board_button\":\"EditBoardForm_edit_board_button__Khq-J\",\"edit_board_plus_icon\":\"EditBoardForm_edit_board_plus_icon__mbuBN\",\"edit_board_icons\":\"EditBoardForm_edit_board_icons__uzjxE\",\"edit_board_wrap_icon\":\"EditBoardForm_edit_board_wrap_icon__THECn\",\"edit_board_title_radio\":\"EditBoardForm_edit_board_title_radio__MUKNb\",\"edit_board_wrap_backgrounds\":\"EditBoardForm_edit_board_wrap_backgrounds__4zKVb\",\"edit_board_thumb_img_placeholder\":\"EditBoardForm_edit_board_thumb_img_placeholder__8Eu8v\",\"edit_board_img_placeholder\":\"EditBoardForm_edit_board_img_placeholder__cPiYr\",\"edit_board_label\":\"EditBoardForm_edit_board_label__P7JhW\",\"edit_board_field\":\"EditBoardForm_edit_board_field__uyrVT\",\"edit_board_wrap_icons\":\"EditBoardForm_edit_board_wrap_icons__1WbOl\",\"radio_semi_stroke\":\"EditBoardForm_radio_semi_stroke__EnCV5\",\"radio_semi_transparent\":\"EditBoardForm_radio_semi_transparent__Bghig\"};","import sprite from '../../../img/icons/sprite.svg';\n\nconst icons = [\n  { id: 'icon-project', image: `${sprite}#icon-project` },\n  { id: 'icon-star', image: `${sprite}#icon-star` },\n  { id: 'icon-loading', image: `${sprite}#icon-loading` },\n  { id: 'icon-puzzle', image: `${sprite}#icon-puzzle` },\n  { id: 'icon-container', image: `${sprite}#icon-container` },\n  { id: 'icon-lightning', image: `${sprite}#icon-lightning` },\n  { id: 'icon-colors', image: `${sprite}#icon-colors` },\n  { id: 'icon-hexagon', image: `${sprite}#icon-hexagon` },\n];\n\nexport default icons;\n","import background1 from './img/backgrounds/Vector.png';\nimport background1Retina from './img/backgrounds/Vector_2x.png';\nimport background2 from './img/backgrounds/Vector-1.png';\nimport background2Retina from './img/backgrounds/Vector-1_2x.png';\nimport background3 from './img/backgrounds/Vector-2.png';\nimport background3Retina from './img/backgrounds/Vector-2_2x.png';\nimport background4 from './img/backgrounds/Vector-3.png';\nimport background4Retina from './img/backgrounds/Vector-3_2x.png';\nimport background5 from './img/backgrounds/Vector-4.png';\nimport background5Retina from './img/backgrounds/Vector-4_2x.png';\nimport background6 from './img/backgrounds/Vector-5.png';\nimport background6Retina from './img/backgrounds/Vector-5_2x.png';\nimport background7 from './img/backgrounds/Vector-6.png';\nimport background7Retina from './img/backgrounds/Vector-6_2x.png';\nimport background8 from './img/backgrounds/Vector-7.png';\nimport background8Retina from './img/backgrounds/Vector-7_2x.png';\nimport background9 from './img/backgrounds/Vector-8.png';\nimport background9Retina from './img/backgrounds/Vector-8_2x.png';\nimport background10 from './img/backgrounds/Vector-9.png';\nimport background10Retina from './img/backgrounds/Vector-9_2x.png';\nimport background11 from './img/backgrounds/Vector-10.png';\nimport background11Retina from './img/backgrounds/Vector-10_2x.png';\nimport background12 from './img/backgrounds/Vector-11.png';\nimport background12Retina from './img/backgrounds/Vector-11_2x.png';\nimport background13 from './img/backgrounds/Vector-12.png';\nimport background13Retina from './img/backgrounds/Vector-12_2x.png';\nimport background14 from './img/backgrounds/Vector-13.png';\nimport background14Retina from './img/backgrounds/Vector-13_2x.png';\nimport background15 from './img/backgrounds/Vector-14.png';\nimport background15Retina from './img/backgrounds/Vector-14_2x.png';\n\nconst backgrounds = [\n  { id: 'backround1', standard: background1, retina: background1Retina },\n  { id: 'backround2', standard: background2, retina: background2Retina },\n  { id: 'backround3', standard: background3, retina: background3Retina },\n  { id: 'backround4', standard: background4, retina: background4Retina },\n  { id: 'background5', standard: background5, retina: background5Retina },\n  { id: 'background6', standard: background6, retina: background6Retina },\n  { id: 'background7', standard: background7, retina: background7Retina },\n  { id: 'background8', standard: background8, retina: background8Retina },\n  { id: 'background9', standard: background9, retina: background9Retina },\n  { id: 'background10', standard: background10, retina: background10Retina },\n  { id: 'background11', standard: background11, retina: background11Retina },\n  { id: 'background12', standard: background12, retina: background12Retina },\n  { id: 'background13', standard: background13, retina: background13Retina },\n  { id: 'background14', standard: background14, retina: background14Retina },\n  { id: 'background15', standard: background15, retina: background15Retina },\n];\n\nexport default backgrounds;\n","import { Field, Form, Formik, ErrorMessage } from 'formik';\nimport style from './EditBoardForm.module.css';\nimport sprite from '../../../img/icons/sprite.svg';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { editBoard } from '../../../redux/board/boardApi';\nimport icons from '../CreateBoardForm/Icons';\nimport { useState } from 'react';\nimport backgrounds from '../CreateBoardForm/Backgrounds';\n\nconst validationSchema = Yup.object({\n    name: Yup.string().required('Title is required'),\n});\n\nconst EditBoardForm = ({ props, openModal }) => {\n    const dispatch = useDispatch();\n\n\n    const [selectedIcon, setSelectedIcon] = useState(null);\n    const [selectedBackground, setSelectedBackground] = useState(null);\n    const handleSubmit = async (values, { resetForm }) => {\n        console.log(values);\n\n        // Dispatch action to edit board\n        await dispatch(editBoard({ _id: props._id, ...values }));\n        resetForm();\n        openModal();\n    };\n\n    return (\n        <Formik\n            initialValues={{ name: props.name, icon: props.icon, background: props.background }}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n        >\n            {(formikProps) => (\n                <Form className={style.edit_board_wrap}>\n                    <h2 className={style.edit_board_title}>Edit board</h2>\n                    <div className={style.edit_board_wrap_input}>\n                        <Field\n                            name=\"name\"\n                            type=\"text\"\n                            placeholder=\"Title\"\n                            className={style.edit_board_input}\n                        />\n                        {/* Error message for name field */}\n                        <ErrorMessage name=\"name\" component=\"div\" className={style.error_message} />\n                    </div>\n                    {/* Other input fields, e.g., for icon and background */}\n                    <div className={style.edit_board_wrap_input}>\n                        <h2 className={style.edit_board_title_radio}>Icons</h2>\n                        <div className={style.edit_board_wrap_icons}>\n                            {icons.map(icon => (\n                                <label key={icon.id} className={`${style.create_board_label}`}>\n                                    <Field\n                                        type=\"radio\"\n                                        name=\"icon\"\n                                        value={icon.id}\n                                        className={style.edit_board_field}\n                                        checked={selectedIcon === icon.id}\n                                        onChange={() => setSelectedIcon(icon.id)}\n                                    />\n                                    <svg\n                                        className={`${style.edit_board_icons} ${selectedIcon === icon.id ? style.radio_semi_stroke : ''\n                                            }`}\n                                        width=\"18\"\n                                        height=\"18\"\n                                    >\n                                        <use href={`${icon.image}`}></use>\n                                    </svg>\n                                </label>\n                            ))}\n                        </div>\n                    </div>\n                    <div className={style.edit_board_wrap_input}>\n                        <h2 className={style.edit_board_title_radio}>Background</h2>\n                        <div className={style.edit_board_wrap_backgrounds}>\n                            <label\n                                key={'default'}\n                                className={`${style.edit_board_thumb_img_placeholder} ${style.edit_board_label\n                                    } ${selectedBackground === 'default'\n                                        ? ''\n                                        : style.radio_semi_transparent\n                                    }`}\n                            >\n                                <Field\n                                    type=\"radio\"\n                                    name=\"background\"\n                                    value={`${sprite}#icon-img_placeholder`}\n                                    className={style.edit_board_field}\n                                    checked={selectedBackground === 'default'}\n                                    onChange={() => setSelectedBackground('default')}\n                                />\n                                <svg\n                                    className={style.edit_board_img_placeholder}\n                                    width=\"16\"\n                                    height=\"16\"\n                                >\n                                    <use href={`${sprite}#icon-img_placeholder`}></use>\n                                </svg>\n                            </label>\n                            {backgrounds.map((img, idx) => (\n                                <label\n                                    key={idx}\n                                    className={`${style.edit_board_label} ${selectedBackground === img.id\n                                        ? ''\n                                        : style.radio_semi_transparent\n                                        }`}\n                                >\n                                    <Field\n                                        type=\"radio\"\n                                        name=\"background\"\n                                        value={`${img.standard}`}\n                                        className={style.edit_board_field}\n                                        checked={selectedBackground === img.id}\n                                        onChange={() => setSelectedBackground(img.id)}\n                                    />\n                                    <img\n                                        key={idx}\n                                        src={img.standard}\n                                        srcSet={`${img.standard} 1x, ${img.retina} 2x`}\n                                        alt=\"Background\"\n                                    ></img>\n                                </label>\n                            ))}\n                        </div>\n                    </div>\n                    {/* Submit button */}\n                    <button className={style.edit_board_button} type=\"submit\">\n                        <div className={style.edit_board_wrap_icon}>\n                            <svg\n                                className={style.edit_board_plus_icon}\n                                width=\"18\"\n                                height=\"18\"\n                                onClick={handleSubmit}\n                            >\n                                <use href={`${sprite}#icon-plus`}></use>\n                            </svg>\n                        </div>\n                        Create\n                    </button>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n\nexport default EditBoardForm;\n","import { deleteBoard } from '../../../redux/board/boardApi';\nimport sprite from '../../../img/icons/sprite.svg';\n// import css from \"./BoardListItem.module.css\"\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import BoardEditModal from '../BoardEditModal/BoardEditModal';\n\n// import Modal from 'components/UI/Modals/Modal/Modal';\n// import { useState } from 'react';\n\n// const BoardListItem = ({ props }) => {\n\n//     const [openModal, setModal] = useState(false);\n\n//     const handleOpenModal = () => {\n//         setModal(true);\n//     };\n//     const dispatch = useDispatch();\n//     const handleDeleteBoard = () => {\n//         dispatch(deleteBoard(props._id));\n//     };\n\n//     return (<div className={css.board_list_item}>\n//         <div className={css.board_box}>\n//             <svg className={css.board_icon} width={18} height={18}>\n//                 <use\n//                     href={`${sprite}#${props.icon}`} />\n//             </svg>\n//             <h4 className={css.board_title}>{props.name}\n//             </h4>\n//         </div>\n//         <div className={css.board_icons}>\n//             {openModal && (\n//                 <Modal\n//                     children={<BoardEditModal openModal={setModal} />}\n//                     openModal={setModal}\n//                 />\n//             )}\n//             <button type='button' className={css.button_edit_board} onClick={handleOpenModal}\n//             >\n//                 <svg className={css.icon_pencil} width={16} height={16}>\n//                     <use href={`${sprite}#icon-pencil`} />\n//                 </svg>\n//             </button>\n//             <button type='button' className={css.button_delete_board}\n//                 onClick={handleDeleteBoard}\n//             >\n//                 <svg className={css.icon_trash} width={16} height={16}\n//                 >\n//                     <use href={`${sprite}#icon-trash`} />\n//                 </svg></button>\n//         </div>\n//         <div className={css.board_line}></div>\n//     </div>)\n// }\n// export default BoardListItem;\n\n// import BoardEditModal from '../BoardEditModal/BoardEditModal';\nimport Modal from 'components/UI/Modals/Modal/Modal';\nimport css from './BoardListItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n// import { getBoardById } from '../../../redux/column/columnApi';\nimport { setShowBoard } from '../../../redux/column/columnSlice';\nimport { useState } from 'react';\nimport EditBoardForm from '../EditBoardForm/EditBoardForm';\n\nconst BoardListItem = ({ props, activeElement, setActiveElement }) => {\n\n    const [openModal, setModal] = useState(false);\n    // const [activeElement, setActiveElement] = useState(null);\n    const handleOpenModal = () => {\n        setModal(true);\n    };\n    const dispatch = useDispatch();\n    const handleBoardClick = () => {\n        setActiveElement(props._id);\n        dispatch(setShowBoard(props));\n    };\n\n    return (\n        <div className={`${css.board_list_item} ${activeElement === props._id ? css.active : ''}`} onClick={handleBoardClick}>\n            <div className={css.board_box}>\n                <svg className={css.board_icon} width={18} height={18}>\n                    <use href={`${sprite}#${props.icon}`} />\n                </svg>\n                <NavLink\n                    to={`${props.name}`}\n                    onClick={() => {\n                        dispatch(setShowBoard(props));\n\n                    }}\n                >\n                    <h4 className={css.board_title}>{props.name}</h4>\n                </NavLink>\n            </div>\n            <div className={css.board_icons}>\n                {openModal && (\n                    <Modal\n                        children={<EditBoardForm openModal={setModal} props={props} />}\n                        openModal={setModal}\n                    />)}\n                <button type='button' className={css.button_edit_board} onClick={handleOpenModal}\n                >\n                    <svg className={css.icon_pencil} width={16} height={16}>\n                        <use href={`${sprite}#icon-pencil`} />\n                    </svg>\n                </button>\n                <button type='button' className={css.button_delete_board}\n                    onClick={() => dispatch(deleteBoard(props._id))}\n                >\n                    <svg\n                        className={css.icon_trash}\n                        width={16}\n                        height={16}\n\n                    >\n                        <use href={`${sprite}#icon-trash`} />\n                    </svg>\n                </button>\n            </div>\n            {activeElement === props._id && <div className={css.board_line}></div>}\n        </div>\n    );\n\n    //   const [openModal, setModal] = useState(false);\n    //   // const [activeElement, setActiveElement] = useState(null);\n    //   const handleOpenModal = () => {\n    //     setModal(true);\n    //   };\n    //   const dispatch = useDispatch();\n    //   const handleBoardClick = () => {\n    //     setActiveElement(props._id);\n    //     dispatch(setShowBoard(props));\n    //   };\n    //   return (\n    //     <div\n    //       className={`${css.board_list_item} ${\n    //         activeElement === props._id ? css.active : ''\n    //       }`}\n    //       onClick={handleBoardClick}\n    //     >\n    //       <div className={css.board_box}>\n    //         <svg className={css.board_icon} width={18} height={18}>\n    //           <use href={`${sprite}#${props.icon}`} />\n    //         </svg>\n    //         <NavLink\n    //           to={`${props.name}`}\n    //           onClick={() => {\n    //             dispatch(setShowBoard(props));\n    //           }}\n    //         >\n    //           <h4 className={css.board_title}>{props.name}</h4>\n    //         </NavLink>\n    //       </div>\n    //       <div className={css.board_icons}>\n    //         {openModal && (\n    //           <Modal\n    //             children={<BoardEditModal openModal={setModal} />}\n    //             openModal={setModal}\n    //           />\n    //         )}\n    //         <button\n    //           type=\"button\"\n    //           className={css.button_edit_board}\n    //           onClick={handleOpenModal}\n    //         >\n    //           <svg className={css.icon_pencil} width={16} height={16}>\n    //             <use href={`${sprite}#icon-pencil`} />\n    //           </svg>\n    //         </button>\n    //         <button\n    //           type=\"button\"\n    //           className={css.button_delete_board}\n    //           onClick={() => dispatch(deleteBoard(props._id))}\n    //         >\n    //           <svg className={css.icon_trash} width={16} height={16}>\n    //             <use href={`${sprite}#icon-trash`} />\n    //           </svg>\n    //         </button>\n    //       </div>\n    //       {activeElement === props._id && <div className={css.board_line}></div>}\n    //     </div>\n    //   );\n\n};\nexport default BoardListItem;\n","export const selectBoards = state => state.boards.boards;\n","import css from './ListBoards.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport BoardListItem from '../BoardListItem/BoardListItem';\nimport { fetchBoards } from '../../../redux/board/boardApi';\nimport { selectBoards } from '../../../redux/board/selectors';\nimport { showBoard } from '../../../redux/column/columnSlice';\nimport { useState } from 'react';\n\nconst ListBoards = () => {\n    const dispatch = useDispatch();\n\n    // useEffect(() => {\n\n    //     dispatch(fetchBoards());\n    // }, [dispatch]);\n\n    //     const boards = useSelector(selectBoards);\n    //     console.log(boards)\n    //     if (!boards || boards.length === 0) {\n    //         return <div className={css.sidebar_boards_list}></div>;\n    //     }\n    //     return (\n    //         <div className={css.sidebar_boards_list}>\n    //             <ul>\n\n    //                 {boards.map(({ name, _id, icon }) => (<li key={_id} className={css.board_list_item}>\n    //                     <BoardListItem props={{ name, icon, _id }} /></li>))}\n    //             </ul>\n\n    //         </div>\n    //     )\n    // }\n\n    const [activeElement, setActiveElement] = useState(null);\n    const boards = useSelector(selectBoards);\n    //   console.log(boards[0]);\n    // dispatch(showBoard(boards[0]));\n\n    useEffect(() => {\n        dispatch(fetchBoards());\n    }, [dispatch]);\n    useEffect(() => {\n        if (boards && boards.length > 0) {\n            dispatch(showBoard(boards[0]));\n            // dispatch(fetchBoards());\n        }\n    }, [boards, dispatch]);\n    // console.log(boards);\n\n    if (!boards || boards.length === 0) {\n        return <div className={css.sidebar_boards_list}></div>;\n    }\n    return (\n        <div className={css.sidebar_boards_list}>\n            <ul className={css.scroll_container}>\n                {boards.map((board, index) =>\n\n\n                    <li key={index} className={css.board_list_item}>\n                        <BoardListItem props={board} activeElement={activeElement} setActiveElement={setActiveElement} />\n                    </li>\n                )\n                }\n            </ul>\n        </div>\n    );\n};\nexport default ListBoards;\n// import React from 'react';\n// import { animateScroll } from 'react-scroll';\n\n// const Sidebar = ({ items }) => {\n//     const scrollToTop = () => {\n//         animateScroll.scrollToTop();\n//     };\n\n//     const scrollToBottom = () => {\n//         animateScroll.scrollToBottom();\n//     };\n\n//     return (\n//         <div className=\"sidebar\">\n//             <div className=\"border-list\">\n//                 {items.length > 2 && (\n//                     <div className=\"scrollbar-container\">\n//                         <button onClick={scrollToTop}>Прокрутити вгору</button>\n//                         <div className=\"list\">\n//                             {items.map((item, index) => (\n//                                 <div key={index} className=\"list-item\">\n//                                     {item}\n//                                 </div>\n//                             ))}\n//                         </div>\n//                         <button onClick={scrollToBottom}>Прокрутити вниз</button>\n//                     </div>\n//                 )}\n//                 {items.length <= 2 && (\n//                     <div className=\"list\">\n//                         {items.map((item, index) => (\n//                             <div key={index} className=\"list-item\">\n//                                 {item}\n//                             </div>\n//                         ))}\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Sidebar;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebar_help_button\":\"HelpButton_sidebar_help_button__dtBZk\",\"sidebar_button_help\":\"HelpButton_sidebar_button_help__4EArE\",\"sidebar_help_logo\":\"HelpButton_sidebar_help_logo__IBUmf\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal_backdrop\":\"HelpModal_modal_backdrop__bPEcz\",\"modal_content\":\"HelpModal_modal_content__ygR32\"};","export const selectModal1 = state => state.modal.modal1;\nexport const selectModal2 = state => state.modal.modal2;\nexport const selectModal3 = state => state.modal.modal3;\n","// extracted by mini-css-extract-plugin\nexport default {\"help_form_wrap\":\"HelpForm_help_form_wrap__EVMiU\",\"help_form_title\":\"HelpForm_help_form_title__PwUWs\",\"help_form_wrap_input\":\"HelpForm_help_form_wrap_input__jLK5M\",\"help_form_input\":\"HelpForm_help_form_input__lqcel\",\"help_form_comment_input\":\"HelpForm_help_form_comment_input__8fJFS\",\"help_form_button\":\"HelpForm_help_form_button__mBc4-\",\"help_form_close_btn\":\"HelpForm_help_form_close_btn__Q6PWH\",\"error_message\":\"HelpForm_error_message__3OdjC\"};","import { Field, Form, Formik, ErrorMessage } from 'formik';\nimport style from './HelpForm.module.css';\nimport sprite from '../../../img/icons/sprite.svg';\nimport * as Yup from 'yup';\nimport { sendHelpEmail } from '../../../redux/user/userApi';\nimport { useDispatch } from 'react-redux';\n\nconst initialValues = {\n  email: '',\n  comment: '',\n};\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .trim()\n    .email()\n    .required('Email is required')\n    .matches(\n      /^[a-zA-Z0-9.-_]+@[a-zA-Z]+\\.[a-zA-Z]{2,3}$/,\n      'Invalid email format'\n    ),\n  comment: Yup.string().required('Comment is required'),\n});\n\nconst HelpForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    // await dispatch(userComment(values));\n    await dispatch(sendHelpEmail(values));\n    console.log(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={style.help_form_wrap}>\n        <svg\n          className={style.help_form_close_btn}\n          width=\"18\"\n          height=\"18\"\n          onClick={onClose}\n        >\n          <use href={`${sprite}#icon-close`}></use>\n        </svg>\n        <h2 className={style.help_form_title}>Need help</h2>\n        <div className={style.help_form_wrap_input}>\n          <ErrorMessage\n            className={style.error_message}\n            name=\"email\"\n            component=\"div\"\n          />\n          <Field\n            className={style.help_form_input}\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email address\"\n          />\n        </div>\n        <div className={style.help_form_wrap_input}>\n          <ErrorMessage\n            className={style.error_message}\n            name=\"comment\"\n            component=\"div\"\n          />\n          <Field\n            className={`${style.help_form_input} ${style.help_form_comment_input}`}\n            type=\"text\"\n            name=\"comment\"\n            placeholder=\"Comment\"\n            as=\"textarea\"\n          />\n        </div>\n        <button className={style.help_form_button} type=\"submit\">\n          Send\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default HelpForm;\n","import { createPortal } from 'react-dom';\nimport css from './HelpModal.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectModal2 } from '../../../redux/modal/modalSelectors';\nimport { useEffect } from 'react';\nimport { closeModal } from '../../../redux/modal/modalSlice';\nimport HelpForm from '../HelpForm/HelpForm';\n\nconst HelpModal = () => {\n  const modal2 = useSelector(selectModal2);\n\n  const dispatch = useDispatch();\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      dispatch(closeModal('modal2'));\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        dispatch(closeModal('modal2'));\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [dispatch]);\n\n  return modal2\n    ? createPortal(\n      <div className={css.modal_backdrop} onClick={handleBackdropClick}>\n        <div className={css.modal_content}>\n          <HelpForm onClose={() => dispatch(closeModal('modal2'))} />\n        </div>\n      </div>,\n      document.querySelector('#modal-root2')\n    )\n    : null;\n};\nexport default HelpModal;\n","import css from './HelpButton.module.css';\nimport sprite from '../../../img/icons/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { openModal } from '../../../redux/modal/modalSlice';\nimport HelpModal from '../HelpModal/HelpModal';\n\nconst HelpButton = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.sidebar_help_button}>\n      <svg className={css.sidebar_help_logo} width=\"20\" height=\"20\">\n        <use href={`${sprite}#icon-help-circle`} />\n      </svg>\n      <button\n        type=\"button\"\n        className={css.sidebar_button_help}\n        onClick={() => dispatch(openModal('modal2', <HelpModal />))}\n      >\n        Need help?\n      </button>\n    </div>\n  );\n};\nexport default HelpButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebar_help_text\":\"HelpMenu_sidebar_help_text__VZ26p\",\"sidebar_help\":\"HelpMenu_sidebar_help__bKKJ3\",\"cactus_container\":\"HelpMenu_cactus_container__ibnGC\",\"sidebar_span\":\"HelpMenu_sidebar_span__yxPmB\"};","import HelpButton from \"../HelpButton/HelpButton\"\nimport css from \"./HelpMenu.module.css\"\nimport flower from '../../../img/sidebar_img/flower1x.png';\nimport flower2 from \"../../../img/sidebar_img/flower2x.png\"\n\nconst HelpMenu = () => {\n    return (\n        <div className={css.sidebar_help}>\n            <div className={css.cactus_container}>\n                <picture>\n                    <source srcSet={flower2} media=\"(min-resolution: 192dpi)\" />\n                    <img alt=\"flower\" className={css.sidebar_photo} src={flower} width=\"54\" height=\"76\" />\n                </picture>\n\n\n                <p className={css.sidebar_help_text}>If you need help with <span className={css.sidebar_span}>TaskPro</span>, check out our support resources or reach out to our customer support team.</p>\n                <HelpButton />\n\n            </div>\n        </div>\n    )\n}\nexport default HelpMenu","// extracted by mini-css-extract-plugin\nexport default {\"sidebar_button_container\":\"CreateButton_sidebar_button_container__HHWlL\",\"button_container\":\"CreateButton_button_container__j6cNW\",\"sidebar_button_title\":\"CreateButton_sidebar_button_title__kBi79\",\"create_board_button\":\"CreateButton_create_board_button__dV79C\",\"sidebar_button_icon\":\"CreateButton_sidebar_button_icon__QJVUk\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal_backdrop\":\"CreateBoardModal_modal_backdrop__rHYjV\",\"modal_content\":\"CreateBoardModal_modal_content__nb+r+\"};","// extracted by mini-css-extract-plugin\nexport default {\"create_bord_wrap\":\"CreateBoardForm_create_bord_wrap__iw6G-\",\"create_board_title\":\"CreateBoardForm_create_board_title__XwmAz\",\"create_board_wrap_input\":\"CreateBoardForm_create_board_wrap_input__piMBI\",\"create_board_input\":\"CreateBoardForm_create_board_input__BMSj3\",\"create_board_close_btn\":\"CreateBoardForm_create_board_close_btn__zgETS\",\"error_message\":\"CreateBoardForm_error_message__5rTbM\",\"create_board_button\":\"CreateBoardForm_create_board_button__dCpBg\",\"create_board_plus_icon\":\"CreateBoardForm_create_board_plus_icon__dl+m+\",\"create_board_icons\":\"CreateBoardForm_create_board_icons__WVHyn\",\"create_board_wrap_icon\":\"CreateBoardForm_create_board_wrap_icon__C6CMx\",\"create_board_title_radio\":\"CreateBoardForm_create_board_title_radio__tXbYT\",\"create_board_wrap_backgrounds\":\"CreateBoardForm_create_board_wrap_backgrounds__Xk6NQ\",\"create_board_thumb_img_placeholder\":\"CreateBoardForm_create_board_thumb_img_placeholder__fUW7p\",\"create_board_img_placeholder\":\"CreateBoardForm_create_board_img_placeholder__7HfZK\",\"create_board_label\":\"CreateBoardForm_create_board_label__m+3YG\",\"create_board_field\":\"CreateBoardForm_create_board_field__6vlCn\",\"create_board_wrap_icons\":\"CreateBoardForm_create_board_wrap_icons__4FT6E\",\"radio_semi_stroke\":\"CreateBoardForm_radio_semi_stroke__tISgS\",\"radio_semi_transparent\":\"CreateBoardForm_radio_semi_transparent__d8ANB\"};","import { Field, Form, Formik, ErrorMessage } from 'formik';\nimport style from './CreateBoardForm.module.css';\nimport sprite from '../../../img/icons/sprite.svg';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { createBoard } from '../../../redux/board/boardApi';\nimport icons from './Icons';\nimport backgrounds from './Backgrounds';\nimport { useState } from 'react';\n\nconst initialValues = {\n  name: '',\n  icon: icons[0].id,\n  background: backgrounds[0].id,\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Title is required'),\n});\n\nconst CreateBoardForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  const [selectedIcon, setSelectedIcon] = useState(null);\n  const [selectedBackground, setSelectedBackground] = useState(null);\n\n  const handleSubmit = async (values, { resetForm }) => {\n    // Добавляем выбранные значения иконки и фона в объект values\n    const updatedValues = {\n      ...values,\n      icon: selectedIcon,\n      background: selectedBackground\n    };\n\n    console.log(updatedValues);\n\n    await dispatch(createBoard(updatedValues));\n    if (resetForm) {\n      await resetForm({}); // Проверяем, что resetForm существует перед его вызовом\n    }\n    // resetForm();\n    onClose();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={style.create_bord_wrap}>\n        <svg\n          className={style.create_board_close_btn}\n          width=\"18\"\n          height=\"18\"\n          onClick={onClose}\n        >\n          <use href={`${sprite}#icon-close`}></use>\n        </svg>\n        <h2 className={style.create_board_title}>New board</h2>\n        <div className={style.create_board_wrap_input}>\n          <ErrorMessage\n            className={style.error_message}\n            name=\"name\"\n            component=\"div\"\n          />\n          <Field\n            className={style.create_board_input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Title\"\n          />\n        </div>\n        <div className={style.create_board_wrap_input}>\n          <h2 className={style.create_board_title_radio}>Icons</h2>\n          <div className={style.create_board_wrap_icons}>\n            {icons.map(icon => (\n              <label key={icon.id} className={`${style.create_board_label}`}>\n                <Field\n                  type=\"radio\"\n                  name=\"icon\"\n                  value={icon.id}\n                  className={style.create_board_field}\n                  checked={selectedIcon === icon.id}\n                  onChange={() => setSelectedIcon(icon.id)}\n                />\n                <svg\n                  className={`${style.create_board_icons} ${selectedIcon === icon.id ? style.radio_semi_stroke : ''\n                    }`}\n                  width=\"18\"\n                  height=\"18\"\n                >\n                  <use href={`${icon.image}`}></use>\n                </svg>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={style.create_board_wrap_input}>\n          <h2 className={style.create_board_title_radio}>Background</h2>\n          <div className={style.create_board_wrap_backgrounds}>\n            <label\n              key={'default'}\n              className={`${style.create_board_thumb_img_placeholder} ${style.create_board_label\n                } ${selectedBackground === 'default'\n                  ? ''\n                  : style.radio_semi_transparent\n                }`}\n            >\n              <Field\n                type=\"radio\"\n                name=\"background\"\n                value={`${sprite}#icon-img_placeholder`}\n                className={style.create_board_field}\n                checked={selectedBackground === 'default'}\n                onChange={() => setSelectedBackground('default')}\n              />\n              <svg\n                className={style.create_board_img_placeholder}\n                width=\"16\"\n                height=\"16\"\n              >\n                <use href={`${sprite}#icon-img_placeholder`}></use>\n              </svg>\n            </label>\n            {backgrounds.map((img, idx) => (\n              <label\n                key={idx}\n                className={`${style.create_board_label} ${selectedBackground === img.id\n                  ? ''\n                  : style.radio_semi_transparent\n                  }`}\n              >\n                <Field\n                  type=\"radio\"\n                  name=\"background\"\n                  value={`${img.id}`}\n                  className={style.create_board_field}\n                  checked={selectedBackground === img.id}\n                  onChange={() => setSelectedBackground(img.id)}\n                />\n                <img\n                  key={idx}\n                  src={img.standard}\n                  srcSet={`${img.standard} 1x, ${img.retina} 2x`}\n                  alt=\"Background\"\n                ></img>\n              </label>\n            ))}\n          </div>\n        </div>\n        <button className={style.create_board_button} type=\"submit\">\n          <div className={style.create_board_wrap_icon}>\n            <svg\n              className={style.create_board_plus_icon}\n              width=\"18\"\n              height=\"18\"\n              onClick={handleSubmit}\n            >\n              <use href={`${sprite}#icon-plus`}></use>\n            </svg>\n          </div>\n          Create\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default CreateBoardForm;\n","import { createPortal } from 'react-dom';\nimport css from './CreateBoardModal.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectModal1 } from '../../../redux/modal/modalSelectors';\nimport { useEffect } from 'react';\nimport { closeModal } from '../../../redux/modal/modalSlice';\nimport CreateBoardForm from '../CreateBoardForm/CreateBoardForm';\n\nconst CreateBoardModal = () => {\n  const modal1 = useSelector(selectModal1);\n\n  const dispatch = useDispatch();\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      dispatch(closeModal('modal1'));\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        dispatch(closeModal('modal1'));\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [dispatch]);\n\n  return modal1\n    ? createPortal(\n      <div className={css.modal_backdrop} onClick={handleBackdropClick}>\n        <div className={css.modal_content}>\n          <CreateBoardForm onClose={() => dispatch(closeModal('modal1'))} />\n        </div>\n      </div>,\n      document.querySelector('#modal-root1')\n    )\n    : null;\n};\nexport default CreateBoardModal;\n","import css from './CreateButton.module.css';\nimport sprite from '../../../img/icons/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport CreateBoardModal from '../CreateBoardModal/CreateBoardModal';\nimport { openModal } from '../../../redux/modal/modalSlice';\n\nconst CreateButton = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.sidebar_button_container}>\n      <div className={css.button_container}>\n        <p className={css.sidebar_button_title}>Create a new board</p>\n        <button\n          type=\"button\"\n          className={css.create_board_button}\n          onClick={() => dispatch(openModal('modal1', <CreateBoardModal />))}\n        >\n          <svg className={css.sidebar_button_icon} width=\"20\" height=\"20\">\n            <use href={`${sprite}#icon-plus`} />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default CreateButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebar_boards_title\":\"NewBoard_sidebar_boards_title__8-s3a\",\"create_board\":\"NewBoard_create_board__FYQ9X\"};","import CreateButton from \"../CreateButton/CreateButton\"\nimport css from \"./NewBoard.module.css\";\n\nconst NewBoard = () => {\n    return (\n        <div className={css.boards_list}>\n            <p className={css.sidebar_boards_title}>My boards</p>\n            <div className={css.create_board}>\n\n                <CreateButton />\n\n            </div>\n        </div>\n    )\n}\nexport default NewBoard\n","import LogOut from \"../LogOut/LogOut\"\nimport Logo from 'components/UI/Logo/Logo';\nimport css from \"../Sidebar/Sidebar.module.css\"\nimport ListBoards from \"../ListBoards/ListBoards\"\nimport HelpMenu from \"../HelpMenu/HelpMenu\"\nimport NewBoard from \"../NewBoard/NewBoard\"\nimport HelpModal from \"../HelpModal/HelpModal\"\nimport CreateBoardModal from \"../CreateBoardModal/CreateBoardModal\"\n\n\nconst Sidebar = ({ isMenuOpen, onClick }) => {\n\n    const handleBackdropClick = () => {\n        onClick();\n\n    };\n\n    return (<> <div className={`${css.sidebar_backdrop} ${isMenuOpen ? css.active : \"\"}`} onClick={handleBackdropClick}></div>\n        <section className={`${css.sidebar} ${isMenuOpen ? css.active : \"\"}`} >\n            <div className={css.sidebar_container} >\n                <Logo />\n                <NewBoard />\n                <ListBoards />\n                <div className={css.sidebar_down}>\n                    <HelpMenu />\n\n                    <LogOut />\n                </div>\n                <HelpModal />\n                <CreateBoardModal />\n            </div>\n        </section></>\n    )\n}\nexport default Sidebar","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HomePage_container__S-kOo\",\"section\":\"HomePage_section__IbGu2\",\"homepage_wrapper\":\"HomePage_homepage_wrapper__lCGlA\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Header_container__vI36D\",\"menu\":\"Header_menu__bKlxq\",\"icon\":\"Header_icon__KAtlG\",\"options\":\"Header_options__6wuv2\",\"info\":\"Header_info__5whlc\",\"name\":\"Header_name__aG1vj\",\"box_icon_user\":\"Header_box_icon_user__giOym\",\"button\":\"Header_button__eZN2O\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"BasicModal_backdrop__3Aene\",\"modal\":\"BasicModal_modal__JytyQ\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './BasicModal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function BasicModal({\n  onClose,\n  children,\n  withoutWrpaper = false,\n}) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={css.backdrop} onClick={handleBackdropClick}>\n      {withoutWrpaper ? children : <div className={css.modal}>{children}</div>}\n    </div>,\n    modalRoot\n  );\n}\n","import React, { useContext } from 'react';\nimport Select from 'react-select';\nimport './Select.css';\nimport { ThemeContext } from 'components/ThemeProvider';\n\nexport const SelectTheme = () => {\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  const THEME_OPTIONS = [\n    { value: 'light', label: 'light' },\n    { value: 'dark', label: 'dark' },\n    { value: 'violet', label: 'violet' },\n  ];\n\n  const onChangeTheme = event => {\n    console.log(event.value);\n    setTheme(event.value);\n  };\n\n  return (\n    <Select\n      classNamePrefix=\"custom-select\"\n      onChange={onChangeTheme}\n      options={THEME_OPTIONS}\n      placeholder={theme}\n      isSearchable={false}\n    />\n  );\n};\n","import sprite from '../../img/icons/sprite.svg';\nimport style from './Header.module.css';\nimport BasicModal from '../UI/Modals/BasicModal/BasicModal';\nimport { useEffect, useState } from 'react';\nimport { SelectTheme } from './Select/Select';\n\n// import userImage from '../../img/user.png';\nimport {useSelector } from 'react-redux';\nimport { userSelect } from '../../redux/user/selectors';\nimport EditUserModal from 'components/staticComponents/EditUserModal';\nimport Modal from 'components/UI/Modals/Modal/Modal';\n// import { updateUser } from '../../redux/user/userApi';\n\nexport default function Header({ onClick }) {\n  // const dispatch = useDispatch();\n  const { name, avatarUrl } = useSelector(userSelect);\n  const [openModal, setModal] = useState(false);\n\n  const handleOpenModal = () => {\n    setModal(true);\n  };\n  // const handleModalClose = () => {\n  //   const userData = {\n  //     name: name,\n  //     avatarURL: avatarURL,\n  //   };\n  //   dispatch(updateUser(userData));\n  // };\n  const [showEditProfile, setShowEditProfile] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const updateWindowWidth = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', updateWindowWidth);\n    return () => {\n      window.removeEventListener('resize', updateWindowWidth);\n    };\n  }, []);\n\n  const toggleEditProfile = () => {\n    setShowEditProfile(!showEditProfile);\n  };\n  return (\n    <div className={style.container}>\n      {windowWidth < 1440 ? (\n        <button onClick={() => onClick()} className={style.menu} type=\"button\">\n          <svg className={style.icon} width=\"24\" height=\"24\">\n            <use xlinkHref={`${sprite}#icon-menu`} />\n          </svg>\n        </button>\n      ) : null}\n      <div className={style.options}>\n        <SelectTheme />\n        <div className={style.info}>\n          <p className={style.name}>{name}</p>\n          {/* <button\n            type=\"button\"\n            className={style.button}\n            onClick={toggleEditProfile}\n          >\n\n            <div className={style.box_icon_user}>\n              <svg width=\"24\" height=\"20\">\n                <use xlinkHref={`${sprite}#icon-user`} />\n              </svg>\n            </div>\n          </button> */}\n          {openModal && (\n            <Modal\n              children={<EditUserModal openModal={setModal} />}\n              openModal={setModal}\n              // onClose={handleModalClose}\n            />\n          )}\n          <button\n            type=\"button\"\n            className={style.button}\n            onClick={handleOpenModal}\n          >\n            {avatarUrl ? (\n              <img\n                src={avatarUrl}\n                alt=\"users avatar\"\n                width={32}\n                height={32}\n                className={style.img}\n              />\n            ) : (\n              <div className={style.box_icon_user}>\n                <svg width={28} height={24} className={style.icon_user}>\n                  <use href={`${sprite}#icon-user`} />\n                </svg>\n              </div>\n            )}\n          </button>\n        </div>\n      </div>\n      {showEditProfile && (\n        <BasicModal onClose={toggleEditProfile} withoutWrpaper={true}>\n          {/* <EditProfile onClose={toggleEditProfile} /> */}\n          Text\n        </BasicModal>\n      )}\n    </div>\n  );\n}\n","import SideBar from 'components/sidebarComponents/Sidebar/Sidebar';\nimport style from './HomePage.module.css';\nimport Header from 'components/Header/Header';\nimport { useEffect, useState } from 'react';\n// import Backdrop from '../components/UI/Backdrop/Backdrop';\nimport BasicModal from '../components/UI/Modals/BasicModal/BasicModal';\n// import HomeView from 'components/Dashboard/HomeView/HomeView';\nimport ScreensPage from './ScreensPage';\n// import HomeView from 'components/Dashboard/HomeView/HomeView';\n\nexport default function HomePage() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  const createBoard = () => {\n    // dispatch(setModalStatus(false));\n    toggleModal();\n  };\n\n  useEffect(() => {\n    function handleResize() {\n      setIsMenuOpen(prevIsMenuOpen => {\n        if (showModal) {\n          return false;\n        } else {\n          return window.innerWidth >= 1440 ? true : prevIsMenuOpen;\n        }\n      });\n    }\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [showModal]); //boards, dispatch\n  // const handleBackdropClick = () => {\n  //   setIsMenuOpen(!isMenuOpen)\n  // }\n  return (\n    <>\n      <div className={style.container}>\n        <section className={style.section}>\n          <SideBar isMenuOpen={isMenuOpen} onClick={toggleMenu} />\n          <section className={style.homepage_wrapper}>\n            <Header onClick={toggleMenu} />\n            <ScreensPage />\n            {showModal && (\n              <BasicModal onClose={createBoard}>\n                {/* <AddEditBoard onClose={toggleModal} boardId={boardId} /> */}\n              </BasicModal>\n            )}\n          </section>\n        </section>\n      </div>\n    </>\n  );\n  // return (\n  //   <>\n  //     <Header toggleMenu={toggleMenu} />\n  //     <div className={style.container}>\n  //       <section className={style.section}>\n  //         <SideBar />\n  //         {isMenuOpen && window.innerWidth < 1440 && <Backdrop />}\n  //         <section>\n  //           <HomeView />\n  //           {showModal && (\n  //             <BasicModal onClose={createBoard}>\n  //               {/* <AddEditBoard onClose={toggleModal} boardId={boardId} /> */}\n  //             </BasicModal>\n  //           )}\n  //         </section>\n  //       </section>\n  //     </div>\n  //   </>\n  // );\n}\n"],"names":["Logo","_ref","_ref$big","big","_jsxs","className","concat","css","children","_jsx","href","sprite","dispatch","useDispatch","type","onClick","logoutUser","width","height","id","image","standard","retina","validationSchema","Yup","name","required","props","openModal","_useState","useState","_useState2","_slicedToArray","selectedIcon","setSelectedIcon","_useState3","_useState4","selectedBackground","setSelectedBackground","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","values","_ref2","resetForm","_context","prev","next","console","log","editBoard","_objectSpread","_id","stop","_x","_x2","apply","arguments","Formik","initialValues","icon","background","onSubmit","formikProps","Form","style","Field","placeholder","ErrorMessage","component","icons","value","checked","onChange","backgrounds","img","idx","src","srcSet","alt","activeElement","setActiveElement","setModal","setShowBoard","NavLink","to","Modal","EditBoardForm","deleteBoard","selectBoards","state","boards","useSelector","useEffect","fetchBoards","length","showBoard","map","board","index","BoardListItem","selectModal1","modal","modal1","selectModal2","modal2","email","comment","trim","matches","onClose","sendHelpEmail","as","handleKeyDown","e","code","closeModal","document","addEventListener","removeEventListener","createPortal","event","currentTarget","target","HelpForm","querySelector","HelpModal","flower2","media","HelpButton","updatedValues","createBoard","CreateBoardForm","CreateBoardModal","CreateButton","isMenuOpen","_Fragment","NewBoard","ListBoards","HelpMenu","LogOut","modalRoot","BasicModal","_ref$withoutWrpaper","withoutWrpaper","window","SelectTheme","_useContext","useContext","ThemeContext","_useContext2","theme","setTheme","Select","classNamePrefix","options","label","isSearchable","Header","_useSelector","userSelect","avatarUrl","showEditProfile","setShowEditProfile","_useState5","innerWidth","_useState6","windowWidth","setWindowWidth","updateWindowWidth","xlinkHref","EditUserModal","HomePage","setIsMenuOpen","showModal","setShowModal","toggleMenu","handleResize","prevIsMenuOpen","SideBar","ScreensPage"],"sourceRoot":""}